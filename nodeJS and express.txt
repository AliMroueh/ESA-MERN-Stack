 - npm install express
 - node backend/server.js // start the server in the named server.js in the backend folder
 - add   "type": "module", in the package.json file to accept import and export es6 features
 - when import file in node js do not forget to put .js at the end of the file name otherwise it will give an error.
 - install json viewer extension // it will give a beautifull sort seen of the json data 
 - npm install --save-dev nodemon // nodemon is a tool that helps develop Node.js based applications by automatically restarting the node application when file changes in the directory are detected.
 - "scripts":{
"start" : "nodemon --watch backend --exec node --experimental-modules backend/server.js"
}
// add it to the package.json file then we can start the backend server using: npm start
 - "proxy": "http://127.0.0.1:5000", // put it under name in the package.json file in the frontend so when we request for api it will redirect to backend based on the proxy address
 - npm install mongoose
 - models keep the fields or columns of our entity in our system
 - npm install bcryptjs // function to hash the password 
 - npm install express-async-handler // for error handling
 - npm install jsonwebtoken // for sign in
 - npm install 
- bcryptjs: This module enables storing of passwords as hashed passwords instead of plaintext
- jsonwebtoken: JSON Web Token is an open industry standard used to share information between two entities, usually a client (like your app's frontend) and a server (your app's backend).
- passport-jwt: 
A Passport strategy for authenticating with a JSON Web Token. This module lets you authenticate endpoints using a JSON web token. It is intended to be used to secure RESTful endpoints without sessions.